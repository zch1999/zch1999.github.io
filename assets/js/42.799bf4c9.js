(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{409:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h2",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("p",[t._v("一般通过两种形式定义：声明形式和构造形式")]),t._v(" "),s("ol",[s("li",[t._v("声明形式：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("构造形式：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmyObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n")])])]),s("p",[t._v("两者的区别：在声明形式中可以添加多个键值对，但构造形式中需要逐个添加属性")]),t._v(" "),s("h2",{attrs:{id:"类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),s("p",[t._v("基本数据类型： string,number,null,undefined,bigint,syboml,boolean\n引用数据类型： Object\n关于typeof null 返回字符串'object',这实际上是语言本身的一个bug")]),t._v(" "),s("h3",{attrs:{id:"内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[t._v("#")]),t._v(" 内置对象")]),t._v(" "),s("p",[t._v("内置对象：String,Number,Boolean,Object,Function,Array,Date,RegExp,Error\n这些内置对象就是一些内置函数，这些内置函数可以当作构造函数来使用，从而可以构造一个对应子类型的新对象。")]),t._v(" "),s("h3",{attrs:{id:"属性描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性描述符"}},[t._v("#")]),t._v(" 属性描述符")]),t._v(" "),s("h3",{attrs:{id:"get"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" [[Get]]")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmyObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),s("p",[t._v("这条语句看起来只是在myObject上查找了a的属性，其实并不是，实际上是实现了[[Get]]操作(有点像函数调用："),s("a",{attrs:{href:""}},[t._v("[Get]")]),t._v(")。\n[[Get]]操作首先在对象中查找是否有名称相同的属性，如果找到就返回这个属性，如果没有找到，[[Get]]会遍历可能存在的[[Prototype]]链。")]),t._v(" "),s("h3",{attrs:{id:"put"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" [[Put]]")]),t._v(" "),s("p",[t._v("[[Put]]被触发时，实际的行为取决于许多因素，包括对象中是否已经存在这个属性，如果存在，[[Put]]算法大致会检查下面这些内容。")]),t._v(" "),s("ol",[s("li",[t._v("属性是否是访问描述符（参见3.3.9节）？如果是并且存在setter就调用setter。")]),t._v(" "),s("li",[t._v("属性的数据描述符中writable是否是false？如果是，在非严格模式下静默失败，在严格模式下抛出TypeError异常。")]),t._v(" "),s("li",[t._v("如果都不是，将该值设置为属性的值。")])]),t._v(" "),s("h3",{attrs:{id:"getter和setter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getter和setter"}},[t._v("#")]),t._v(" Getter和Setter")])])}),[],!1,null,null,null);a.default=r.exports}}]);