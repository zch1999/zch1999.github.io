(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{431:function(e,t,l){"use strict";l.r(t);var a=l(42),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"flex系列学习"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex系列学习"}},[e._v("#")]),e._v(" flex系列学习")]),e._v(" "),l("p",[e._v("2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。")]),e._v(" "),l("h2",{attrs:{id:"flex是什么"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex是什么"}},[e._v("#")]),e._v(" flex是什么")]),e._v(" "),l("p",[e._v('Flex是FlexibleBox的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')]),e._v(" "),l("p",[e._v("任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。注意，设为Flex布局以后，子元素的float、cl\near和vertical-align属性将失效。")]),e._v(" "),l("p",[e._v('采用Flex布局的元素，称为Flex容器（flexcontainer），简称"容器"。它的所有子元素自动成为容器成员，称为Flex\n项目（flexitem），简称"项目"。')]),e._v(" "),l("p",[e._v("容器默认存在两根轴：水平的主轴（mainaxis）和垂直的交叉轴（crossaxis），项目默认沿主轴排列。")]),e._v(" "),l("h2",{attrs:{id:"以下6个属性设置在容器上。"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#以下6个属性设置在容器上。"}},[e._v("#")]),e._v(" 以下6个属性设置在容器上。")]),e._v(" "),l("p",[e._v("flex-direction属性决定主轴的方向（即项目的排列方向）。")]),e._v(" "),l("p",[e._v("flex-wrap属性定义，如果一条轴线排不下，如何换行。")]),e._v(" "),l("p",[e._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为rownowrap。")]),e._v(" "),l("p",[e._v("justify-content属性定义了项目在主轴上的对齐方式。justify-content: flex-start | flex-end | center | space-between | space-around;")]),e._v(" "),l("p",[e._v("align-items属性定义项目在交叉轴上如何对齐。align-items: flex-start | flex-end | center | baseline | stretch;")]),e._v(" "),l("p",[e._v("align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),e._v(" "),l("h2",{attrs:{id:"以下6个属性设置在项目上。"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#以下6个属性设置在项目上。"}},[e._v("#")]),e._v(" 以下6个属性设置在项目上。")]),e._v(" "),l("p",[e._v("order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),e._v(" "),l("p",[e._v("flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),e._v(" "),l("p",[e._v("flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),e._v(" "),l("p",[e._v("flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间。浏览器根据这个属性，计算主轴是否有多余空间。它的默认\n值为auto，即项目的本来大小。")]),e._v(" "),l("p",[e._v("flex属性是flex-grow，flex-shrink和flex-basis的简写，默认值为01auto。")]),e._v(" "),l("p",[e._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父\n元素的align-items属性，如果没有父元素，则等同于stretch。")]),e._v(" "),l("h2",{attrs:{id:"flex面试点"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex面试点"}},[e._v("#")]),e._v(" flex面试点")]),e._v(" "),l("blockquote",[l("p",[e._v("left:500px; right:400px\n当子盒子 left + right > flex盒子的宽度\n默认时子盒子都按比例缩放\n当flex-shrink为2：1时:"),l("br"),e._v("\n缩放比例为 500*2：400 = 5:2 既自身值乘以比的比例")])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("当子盒子有padding时\nflex-shrink: left2 right1\n标准盒模型中 content-box")]),e._v(" "),l("ul",[l("li",[e._v("500+2"),l("em",[e._v("40 + 400+2")]),e._v("20 - 400 = 420\nleft = 500 - 420 * 5/7\nright = 400 - 420 * 2/7")])])]),e._v(" "),l("li",[l("p",[e._v("box-sizeing: border-box, ie盒模型")]),e._v(" "),l("ul",[l("li",[e._v("500+400-600=300")]),e._v(" "),l("li",[e._v("超出部分 420 * 2 ：360 = 7：3")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);