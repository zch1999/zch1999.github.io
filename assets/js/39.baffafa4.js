(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{406:function(t,a,e){"use strict";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"buffer与性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#buffer与性能"}},[t._v("#")]),t._v(" Buffer与性能")]),t._v(" "),e("p",[t._v("Buffer在文件I/O和网络I/O中运用广泛，在应用中，我们通常操作字符串，但在网络中传输，一般转换为Buffer，以二进制传输。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("在Node构建的Web应用中，可以选择将页面中的动态内容和静态内容分离，静态内容部分可以通过预先转换为Buffer的方式，使性能得到提升。由于文件自身是二进制数据，所以在不需要改变内容的场景下，尽量只读取Buffer，然后直接传输，不做额外的转换，避免损耗。")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("文件读取"),e("br"),t._v("\n在文件读取时，fs.createReadStream(path,opts)可以传入一些参数，其中highWaterMark设置会对性能产生重大影响。fs.createReadStream(path,opts)的工作是在内存中准备一段Buffer，理想状态下，每次读取文件的长度就是设置好的highWaterMark。"),e("br"),t._v("\n由于fs.createReadStream()内部采用fs.read()实现，将会引起对磁盘的系统调用，对于大文件而言，highWaterMark的大小决定会触发系统调用和data事件的次数。`")])]),t._v(" "),e("li",[e("p",[t._v("highWaterMark的大小对性能有影响的点："),e("br")])])]),t._v(" "),e("ol",[e("li",[t._v("highWaterMark设置对Buffer内存的分配和使用有一定影响。"),e("br")]),t._v(" "),e("li",[t._v("highWaterMark设置过小，可能导致系统调用次数过多")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("由于fs.createReadStream()内部采用fs.read()实现，将会引起对磁盘的系统调用，对于大文件而言，highWaterMark的大小决定会触发系统调用和data事件的次数。")])])])}),[],!1,null,null,null);a.default=s.exports}}]);